// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_ConfirmQuitState
#include <ConfirmQuitState.h>
#endif
#ifndef INCLUDED_MenuState
#include <MenuState.h>
#endif
#ifndef INCLUDED_PlayState
#include <PlayState.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxGame
#include <flixel/FlxGame.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_FlxState
#include <flixel/FlxState.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
#ifndef INCLUDED_flixel_input_IFlxInput
#include <flixel/input/IFlxInput.h>
#endif
#ifndef INCLUDED_flixel_ui_FlxButton
#include <flixel/ui/FlxButton.h>
#endif
#ifndef INCLUDED_flixel_ui_FlxTypedButton_flixel_text_FlxText
#include <flixel/ui/FlxTypedButton_flixel_text_FlxText.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_1f119275e66a7b90_8_new,"MenuState","new",0xe563b1c4,"MenuState.new","MenuState.hx",8,0xdfbcb22c)
HX_LOCAL_STACK_FRAME(_hx_pos_1f119275e66a7b90_13_create,"MenuState","create",0xe57b7c18,"MenuState.create","MenuState.hx",13,0xdfbcb22c)
HX_LOCAL_STACK_FRAME(_hx_pos_1f119275e66a7b90_22_update,"MenuState","update",0xf0719b25,"MenuState.update","MenuState.hx",22,0xdfbcb22c)
HX_LOCAL_STACK_FRAME(_hx_pos_1f119275e66a7b90_26_clickPlay,"MenuState","clickPlay",0x5f6a9ec0,"MenuState.clickPlay","MenuState.hx",26,0xdfbcb22c)
HX_LOCAL_STACK_FRAME(_hx_pos_1f119275e66a7b90_29_clickQuit,"MenuState","clickQuit",0x601ab09b,"MenuState.clickQuit","MenuState.hx",29,0xdfbcb22c)

void MenuState_obj::__construct( ::Dynamic MaxSize){
            	HX_STACKFRAME(&_hx_pos_1f119275e66a7b90_8_new)
HXDLIN(   8)		super::__construct(MaxSize);
            	}

Dynamic MenuState_obj::__CreateEmpty() { return new MenuState_obj; }

void *MenuState_obj::_hx_vtable = 0;

Dynamic MenuState_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< MenuState_obj > _hx_result = new MenuState_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool MenuState_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x2335d9a7) {
		if (inClassId<=(int)0x17fb3926) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x17fb3926;
		} else {
			return inClassId==(int)0x2335d9a7;
		}
	} else {
		return inClassId==(int)0x25a685e0 || inClassId==(int)0x3634c52c;
	}
}

void MenuState_obj::create(){
            	HX_GC_STACKFRAME(&_hx_pos_1f119275e66a7b90_13_create)
HXLINE(  14)		this->super::create();
HXLINE(  15)		Float _hx_tmp = ((Float)::flixel::FlxG_obj::width / (Float)(int)2);
HXDLIN(  15)		this->playBtn =  ::flixel::ui::FlxButton_obj::__alloc( HX_CTX ,_hx_tmp,((Float)::flixel::FlxG_obj::height / (Float)(int)2),HX_("Play",14,5a,33,35),this->clickPlay_dyn());
HXLINE(  16)		Float _hx_tmp1 = ((Float)::flixel::FlxG_obj::width / (Float)(int)2);
HXDLIN(  16)		this->quitBtn =  ::flixel::ui::FlxButton_obj::__alloc( HX_CTX ,_hx_tmp1,(((Float)::flixel::FlxG_obj::height / (Float)(int)2) + (int)50),HX_("Quit",ef,6b,e3,35),this->clickQuit_dyn());
HXLINE(  17)		this->add(this->quitBtn);
HXLINE(  18)		this->add(this->playBtn);
            	}


void MenuState_obj::update(Float elapsed){
            	HX_STACKFRAME(&_hx_pos_1f119275e66a7b90_22_update)
HXDLIN(  22)		this->super::update(elapsed);
            	}


void MenuState_obj::clickPlay(){
            	HX_GC_STACKFRAME(&_hx_pos_1f119275e66a7b90_26_clickPlay)
HXDLIN(  26)		 ::flixel::FlxState nextState =  ::PlayState_obj::__alloc( HX_CTX ,null());
HXDLIN(  26)		if (::flixel::FlxG_obj::game->_state->switchTo(nextState)) {
HXDLIN(  26)			::flixel::FlxG_obj::game->_requestedState = nextState;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(MenuState_obj,clickPlay,(void))

void MenuState_obj::clickQuit(){
            	HX_GC_STACKFRAME(&_hx_pos_1f119275e66a7b90_29_clickQuit)
HXLINE(  30)		::haxe::Log_obj::trace(HX_("Quit!",52,05,1b,f1),hx::SourceInfo(HX_("MenuState.hx",2c,b2,bc,df),30,HX_("MenuState",d2,bf,b6,c0),HX_("clickQuit",37,ac,09,2a)));
HXLINE(  31)		{
HXLINE(  31)			 ::flixel::FlxState nextState =  ::ConfirmQuitState_obj::__alloc( HX_CTX ,null());
HXDLIN(  31)			if (::flixel::FlxG_obj::game->_state->switchTo(nextState)) {
HXLINE(  31)				::flixel::FlxG_obj::game->_requestedState = nextState;
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(MenuState_obj,clickQuit,(void))


hx::ObjectPtr< MenuState_obj > MenuState_obj::__new( ::Dynamic MaxSize) {
	hx::ObjectPtr< MenuState_obj > __this = new MenuState_obj();
	__this->__construct(MaxSize);
	return __this;
}

hx::ObjectPtr< MenuState_obj > MenuState_obj::__alloc(hx::Ctx *_hx_ctx, ::Dynamic MaxSize) {
	MenuState_obj *__this = (MenuState_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(MenuState_obj), true, "MenuState"));
	*(void **)__this = MenuState_obj::_hx_vtable;
	__this->__construct(MaxSize);
	return __this;
}

MenuState_obj::MenuState_obj()
{
}

void MenuState_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(MenuState);
	HX_MARK_MEMBER_NAME(playBtn,"playBtn");
	HX_MARK_MEMBER_NAME(quitBtn,"quitBtn");
	 ::flixel::FlxState_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void MenuState_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(playBtn,"playBtn");
	HX_VISIT_MEMBER_NAME(quitBtn,"quitBtn");
	 ::flixel::FlxState_obj::__Visit(HX_VISIT_ARG);
}

hx::Val MenuState_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"create") ) { return hx::Val( create_dyn() ); }
		if (HX_FIELD_EQ(inName,"update") ) { return hx::Val( update_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"playBtn") ) { return hx::Val( playBtn ); }
		if (HX_FIELD_EQ(inName,"quitBtn") ) { return hx::Val( quitBtn ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"clickPlay") ) { return hx::Val( clickPlay_dyn() ); }
		if (HX_FIELD_EQ(inName,"clickQuit") ) { return hx::Val( clickQuit_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val MenuState_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"playBtn") ) { playBtn=inValue.Cast<  ::flixel::ui::FlxButton >(); return inValue; }
		if (HX_FIELD_EQ(inName,"quitBtn") ) { quitBtn=inValue.Cast<  ::flixel::ui::FlxButton >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void MenuState_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("playBtn","\xc8","\x7c","\xfa","\x89"));
	outFields->push(HX_HCSTRING("quitBtn","\xcd","\xc5","\xac","\xe4"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo MenuState_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::flixel::ui::FlxButton*/ ,(int)offsetof(MenuState_obj,playBtn),HX_HCSTRING("playBtn","\xc8","\x7c","\xfa","\x89")},
	{hx::fsObject /*::flixel::ui::FlxButton*/ ,(int)offsetof(MenuState_obj,quitBtn),HX_HCSTRING("quitBtn","\xcd","\xc5","\xac","\xe4")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *MenuState_obj_sStaticStorageInfo = 0;
#endif

static ::String MenuState_obj_sMemberFields[] = {
	HX_HCSTRING("playBtn","\xc8","\x7c","\xfa","\x89"),
	HX_HCSTRING("quitBtn","\xcd","\xc5","\xac","\xe4"),
	HX_HCSTRING("create","\xfc","\x66","\x0f","\x7c"),
	HX_HCSTRING("update","\x09","\x86","\x05","\x87"),
	HX_HCSTRING("clickPlay","\x5c","\x9a","\x59","\x29"),
	HX_HCSTRING("clickQuit","\x37","\xac","\x09","\x2a"),
	::String(null()) };

static void MenuState_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(MenuState_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void MenuState_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(MenuState_obj::__mClass,"__mClass");
};

#endif

hx::Class MenuState_obj::__mClass;

void MenuState_obj::__register()
{
	hx::Object *dummy = new MenuState_obj;
	MenuState_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("MenuState","\xd2","\xbf","\xb6","\xc0");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = MenuState_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(MenuState_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< MenuState_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = MenuState_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MenuState_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MenuState_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

